package com.easy.easybook.utils;

import com.easy.easybook.models.CountryCode;
import java.util.ArrayList;
import java.util.List;

public class CountryCodeUtils {
    
    public static List<CountryCode> getCountryCodes() {
        List<CountryCode> countryCodes = new ArrayList<>();
        
        // Popular countries with their codes
        countryCodes.add(new CountryCode("India", "IN", "+91", "ğŸ‡®ğŸ‡³"));
        countryCodes.add(new CountryCode("United States", "US", "+1", "ğŸ‡ºğŸ‡¸"));
        countryCodes.add(new CountryCode("United Kingdom", "GB", "+44", "ğŸ‡¬ğŸ‡§"));
        countryCodes.add(new CountryCode("Canada", "CA", "+1", "ğŸ‡¨ğŸ‡¦"));
        countryCodes.add(new CountryCode("Australia", "AU", "+61", "ğŸ‡¦ğŸ‡º"));
        countryCodes.add(new CountryCode("Germany", "DE", "+49", "ğŸ‡©ğŸ‡ª"));
        countryCodes.add(new CountryCode("France", "FR", "+33", "ğŸ‡«ğŸ‡·"));
        countryCodes.add(new CountryCode("Japan", "JP", "+81", "ğŸ‡¯ğŸ‡µ"));
        countryCodes.add(new CountryCode("China", "CN", "+86", "ğŸ‡¨ğŸ‡³"));
        countryCodes.add(new CountryCode("Brazil", "BR", "+55", "ğŸ‡§ğŸ‡·"));
        countryCodes.add(new CountryCode("Russia", "RU", "+7", "ğŸ‡·ğŸ‡º"));
        countryCodes.add(new CountryCode("South Korea", "KR", "+82", "ğŸ‡°ğŸ‡·"));
        countryCodes.add(new CountryCode("Italy", "IT", "+39", "ğŸ‡®ğŸ‡¹"));
        countryCodes.add(new CountryCode("Spain", "ES", "+34", "ğŸ‡ªğŸ‡¸"));
        countryCodes.add(new CountryCode("Netherlands", "NL", "+31", "ğŸ‡³ğŸ‡±"));
        countryCodes.add(new CountryCode("Sweden", "SE", "+46", "ğŸ‡¸ğŸ‡ª"));
        countryCodes.add(new CountryCode("Norway", "NO", "+47", "ğŸ‡³ğŸ‡´"));
        countryCodes.add(new CountryCode("Denmark", "DK", "+45", "ğŸ‡©ğŸ‡°"));
        countryCodes.add(new CountryCode("Finland", "FI", "+358", "ğŸ‡«ğŸ‡®"));
        countryCodes.add(new CountryCode("Switzerland", "CH", "+41", "ğŸ‡¨ğŸ‡­"));
        countryCodes.add(new CountryCode("Austria", "AT", "+43", "ğŸ‡¦ğŸ‡¹"));
        countryCodes.add(new CountryCode("Belgium", "BE", "+32", "ğŸ‡§ğŸ‡ª"));
        countryCodes.add(new CountryCode("Poland", "PL", "+48", "ğŸ‡µğŸ‡±"));
        countryCodes.add(new CountryCode("Czech Republic", "CZ", "+420", "ğŸ‡¨ğŸ‡¿"));
        countryCodes.add(new CountryCode("Hungary", "HU", "+36", "ğŸ‡­ğŸ‡º"));
        countryCodes.add(new CountryCode("Portugal", "PT", "+351", "ğŸ‡µğŸ‡¹"));
        countryCodes.add(new CountryCode("Greece", "GR", "+30", "ğŸ‡¬ğŸ‡·"));
        countryCodes.add(new CountryCode("Turkey", "TR", "+90", "ğŸ‡¹ğŸ‡·"));
        countryCodes.add(new CountryCode("Israel", "IL", "+972", "ğŸ‡®ğŸ‡±"));
        countryCodes.add(new CountryCode("South Africa", "ZA", "+27", "ğŸ‡¿ğŸ‡¦"));
        countryCodes.add(new CountryCode("Egypt", "EG", "+20", "ğŸ‡ªğŸ‡¬"));
        countryCodes.add(new CountryCode("Nigeria", "NG", "+234", "ğŸ‡³ğŸ‡¬"));
        countryCodes.add(new CountryCode("Kenya", "KE", "+254", "ğŸ‡°ğŸ‡ª"));
        countryCodes.add(new CountryCode("Morocco", "MA", "+212", "ğŸ‡²ğŸ‡¦"));
        countryCodes.add(new CountryCode("Tunisia", "TN", "+216", "ğŸ‡¹ğŸ‡³"));
        countryCodes.add(new CountryCode("Algeria", "DZ", "+213", "ğŸ‡©ğŸ‡¿"));
        countryCodes.add(new CountryCode("Saudi Arabia", "SA", "+966", "ğŸ‡¸ğŸ‡¦"));
        countryCodes.add(new CountryCode("United Arab Emirates", "AE", "+971", "ğŸ‡¦ğŸ‡ª"));
        countryCodes.add(new CountryCode("Qatar", "QA", "+974", "ğŸ‡¶ğŸ‡¦"));
        countryCodes.add(new CountryCode("Kuwait", "KW", "+965", "ğŸ‡°ğŸ‡¼"));
        countryCodes.add(new CountryCode("Bahrain", "BH", "+973", "ğŸ‡§ğŸ‡­"));
        countryCodes.add(new CountryCode("Oman", "OM", "+968", "ğŸ‡´ğŸ‡²"));
        countryCodes.add(new CountryCode("Jordan", "JO", "+962", "ğŸ‡¯ğŸ‡´"));
        countryCodes.add(new CountryCode("Lebanon", "LB", "+961", "ğŸ‡±ğŸ‡§"));
        countryCodes.add(new CountryCode("Syria", "SY", "+963", "ğŸ‡¸ğŸ‡¾"));
        countryCodes.add(new CountryCode("Iraq", "IQ", "+964", "ğŸ‡®ğŸ‡¶"));
        countryCodes.add(new CountryCode("Iran", "IR", "+98", "ğŸ‡®ğŸ‡·"));
        countryCodes.add(new CountryCode("Pakistan", "PK", "+92", "ğŸ‡µğŸ‡°"));
        countryCodes.add(new CountryCode("Bangladesh", "BD", "+880", "ğŸ‡§ğŸ‡©"));
        countryCodes.add(new CountryCode("Sri Lanka", "LK", "+94", "ğŸ‡±ğŸ‡°"));
        countryCodes.add(new CountryCode("Nepal", "NP", "+977", "ğŸ‡³ğŸ‡µ"));
        countryCodes.add(new CountryCode("Bhutan", "BT", "+975", "ğŸ‡§ğŸ‡¹"));
        countryCodes.add(new CountryCode("Maldives", "MV", "+960", "ğŸ‡²ğŸ‡»"));
        countryCodes.add(new CountryCode("Afghanistan", "AF", "+93", "ğŸ‡¦ğŸ‡«"));
        countryCodes.add(new CountryCode("Thailand", "TH", "+66", "ğŸ‡¹ğŸ‡­"));
        countryCodes.add(new CountryCode("Vietnam", "VN", "+84", "ğŸ‡»ğŸ‡³"));
        countryCodes.add(new CountryCode("Malaysia", "MY", "+60", "ğŸ‡²ğŸ‡¾"));
        countryCodes.add(new CountryCode("Singapore", "SG", "+65", "ğŸ‡¸ğŸ‡¬"));
        countryCodes.add(new CountryCode("Indonesia", "ID", "+62", "ğŸ‡®ğŸ‡©"));
        countryCodes.add(new CountryCode("Philippines", "PH", "+63", "ğŸ‡µğŸ‡­"));
        countryCodes.add(new CountryCode("Taiwan", "TW", "+886", "ğŸ‡¹ğŸ‡¼"));
        countryCodes.add(new CountryCode("Hong Kong", "HK", "+852", "ğŸ‡­ğŸ‡°"));
        countryCodes.add(new CountryCode("Macau", "MO", "+853", "ğŸ‡²ğŸ‡´"));
        countryCodes.add(new CountryCode("New Zealand", "NZ", "+64", "ğŸ‡³ğŸ‡¿"));
        countryCodes.add(new CountryCode("Mexico", "MX", "+52", "ğŸ‡²ğŸ‡½"));
        countryCodes.add(new CountryCode("Argentina", "AR", "+54", "ğŸ‡¦ğŸ‡·"));
        countryCodes.add(new CountryCode("Chile", "CL", "+56", "ğŸ‡¨ğŸ‡±"));
        countryCodes.add(new CountryCode("Colombia", "CO", "+57", "ğŸ‡¨ğŸ‡´"));
        countryCodes.add(new CountryCode("Peru", "PE", "+51", "ğŸ‡µğŸ‡ª"));
        countryCodes.add(new CountryCode("Venezuela", "VE", "+58", "ğŸ‡»ğŸ‡ª"));
        countryCodes.add(new CountryCode("Ecuador", "EC", "+593", "ğŸ‡ªğŸ‡¨"));
        countryCodes.add(new CountryCode("Bolivia", "BO", "+591", "ğŸ‡§ğŸ‡´"));
        countryCodes.add(new CountryCode("Paraguay", "PY", "+595", "ğŸ‡µğŸ‡¾"));
        countryCodes.add(new CountryCode("Uruguay", "UY", "+598", "ğŸ‡ºğŸ‡¾"));
        
        return countryCodes;
    }
    
    public static CountryCode getDefaultCountry() {
        return new CountryCode("Australia", "AU", "+61",  "ğŸ‡¦ğŸ‡º");
    }
    
    public static CountryCode findCountryByCode(String dialCode) {
        for (CountryCode country : getCountryCodes()) {
            if (country.getDialCode().equals(dialCode)) {
                return country;
            }
        }
        return getDefaultCountry();
    }
}
